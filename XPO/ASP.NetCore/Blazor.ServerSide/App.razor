@inject NavigationManager navigationManager

<Router AppAssembly="@typeof(Program).Assembly">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
            <NotAuthorized>
                @{
                    string returnUrl = $"~/{navigationManager.ToBaseRelativePath(navigationManager.Uri)}";
                    navigationManager.NavigateTo($"Login?returnUrl={returnUrl}", forceLoad: true);
                }
            </NotAuthorized>
        </AuthorizeRouteView>
    </Found>
    <NotFound>
        <CascadingAuthenticationState>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </CascadingAuthenticationState>
    </NotFound>
</Router>

@code {
    [Inject]
    Blazor.ServerSide.Services.InitialApplicationStateInitializer InitialApplicationStateInitializer { get; set; }
    [Parameter]
    public Blazor.ServerSide.Services.InitialApplicationState InitialApplicationState { get; set; }
    protected override void OnInitialized() {
        InitialApplicationStateInitializer.Initialize(InitialApplicationState);
        base.OnInitialized();
    }
}