@inject WebAPIService Service;
@inject HttpClient HttpClient;
@implements IDisposable;
<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorApp1</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3" hidden="@(IsAuthenticated)">
            <NavLink class="nav-link" href="login">
                <span class="oi oi-plus" aria-hidden="true"></span> Login
            </NavLink>
        </div>
        <div class="nav-item px-3" hidden="@(!IsAuthenticated)">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </div>
        <div class="nav-item px-3" hidden="@(!IsAuthenticated)">
            <NavLink class="nav-link" href="login" @onclick="() => Service.Logout()">
                <span class="oi oi-account-logout" aria-hidden="true"></span> logout
            </NavLink>
        </div>
        
    </nav>
</div>

@code {
    
    protected override void OnInitialized() {
        base.OnInitialized();
        Service.OnAuthenticationStateChanged += StateHasChanged;
    }

    public void Dispose() => Service.OnAuthenticationStateChanged -= StateHasChanged;
    private bool IsAuthenticated => HttpClient.DefaultRequestHeaders.Authorization != null;
    private bool _collapseNavMenu = true;
    private string? NavMenuCssClass => _collapseNavMenu ? "collapse" : null;
    private void ToggleNavMenu() => _collapseNavMenu = !_collapseNavMenu;


    

}
