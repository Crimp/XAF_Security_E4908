@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject HttpClient HttpClient;
@inject WebAPIAuthenticationStateService WebAPIAuthenticationStateService;

<AuthorizeView>
    <Authorized>
        <a href="authentication/profile">Hello, @context.User.Identity?.Name!</a>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/register">Register</a>
        <button class="nav-link btn btn-link" @onclick="WebAPILogin">Log in</button>
    </NotAuthorized>
</AuthorizeView>

@code{
    private void WebAPILogin(MouseEventArgs args) 
        => Navigation.NavigateTo("authentication/WebAPILogin");

    private async Task BeginSignOut(MouseEventArgs args) {
        await SignOutManager.SetSignOutState();
        await HttpClient.PostAsync("Authentication/LogoutAsync", null);
        await WebAPIAuthenticationStateService.SignOutAsync(new RemoteAuthenticationContext<WebAPIAuthenticationState> {
                State = new WebAPIAuthenticationState()
            });
        //Navigation.NavigateTo("authentication/logout");
    }
}